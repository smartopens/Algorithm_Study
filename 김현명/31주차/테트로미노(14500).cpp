#include <iostream>

using namespace std;

struct t_no
{
	int r;
	int c;
};

// 가능한 모든 도형의 모형이다.
t_no tetros[5][8][4] =
{
	{
		{{0,0},{0,1},{0,2},{0,3}},
		{{0,0},{1,0},{2,0},{3,0}},
		{{-1,-1},{-1,-1},{-1,-1},{-1,-1}},
		{{-1,-1},{-1,-1},{-1,-1},{-1,-1}},
	},
	{
		{{0,0},{0,1},{1,1},{1,0}},
		{{-1,-1},{-1,-1},{-1,-1},{-1,-1}},
		{{-1,-1},{-1,-1},{-1,-1},{-1,-1}},
		{{-1,-1},{-1,-1},{-1,-1},{-1,-1}},
	},
	{
		{{0,0},{1,0},{2,0},{2,1}},
		{{0,0},{1,0},{2,0},{2,-1}},
		{{0,0},{0,1},{0,2},{1,2}},
		{{0,0},{0,1},{0,2},{1,0}},
		{{0,0},{1,0},{2,0},{0,-1}},
		{{0,0},{1,0},{2,0},{0,1}},
		{{0,0},{0,1},{0,2},{-1,2}},
		{{0,0},{0,1},{0,2},{-1,0}},
	},
	{
		{{0,0},{1,0},{1,1},{2,1}},
		{{0,0},{-1,0},{-1,1},{-2,1}},
		{{0,0},{0,1},{1,1},{1,2}},
		{{0,0},{0,1},{-1,1},{-1,2}},
	},
	{
		{{0,0},{0,1},{0,2},{1,1}},
		{{0,0},{0,1},{0,2},{-1,1}},
		{{0,0},{1,0},{2,0},{1,1}},
		{{0,0},{1,0},{2,0},{1,-1}},
	},
};

// 각 도형 종류별로 회전, 대칭으로 변환될 수 있는 size이다.
int t_size[5] = { 2,1,8,4,4 };

int n, m;
int board[502][502];
int max_ts;

// 5개 도형 종류별로 보드에서 모든 가상의 시작점을 고려한다.
// 한 정사각형이 한보드를 포함해야하므로 4가지 모두 올린것으로 구현했다.
// 최대 점수를 구한다.
void count_ts(int ti)
{
	int l_ts, t_flag;
	for (int ts = 0; ts < t_size[ti]; ts++)
	{
		for (int sr = 0; sr < n; sr++)
		{
			for (int sc = 0; sc < m; sc++)
			{
				l_ts = 0;
				t_flag = 1;
				int nr, nc;
				for (int bs = 0; bs < 4; bs++)
				{
					nr = sr + tetros[ti][ts][bs].r;
					nc = sc + tetros[ti][ts][bs].c;

					if (0 > nr || n - 1 < nr || 0 > nc || m - 1 < nc)
					{
						t_flag = 0;
						break;
					}
					
					l_ts += board[nr][nc];
				}

				if (t_flag != 0)
				{
					if (l_ts > max_ts)
					{
						max_ts = l_ts;
					}
				}
			}
		}
	}
}

int main()
{
	// 도형 정보 입력받기
	cin >> n >> m;
	for (int r = 0; r < n; r++)
	{
		for (int c = 0; c < m; c++)
		{
			cin >> board[r][c];
		}
	}

	// 5가지 모양에 대해서 확인하기
	for (int ti = 0; ti < 5; ti++)
	{
		count_ts(ti);
	}

	cout << max_ts << endl;
	return 0;
}