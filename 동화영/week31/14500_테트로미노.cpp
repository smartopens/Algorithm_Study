//14500 테트로미노
#include <iostream>
using namespace std;

//가능한 테트로미노 조각들 (기본+회전+반전)
int tetris[19][4][4] = {
	{{1,1,1,1}, {0,0,0,0}, {0,0,0,0}, {0,0,0,0}}, // ㅡ
	{{1,0,0,0}, {1,0,0,0}, {1,0,0,0}, {1,0,0,0}}, // |
	{{1,1,0,0}, {1,1,0,0}, {0,0,0,0}, {0,0,0,0}}, // ㅁ
	{{1,0,0,0}, {1,0,0,0}, {1,1,0,0}, {0,0,0,0}}, // ㄴ
	{{1,1,1,0}, {1,0,0,0}, {0,0,0,0}, {0,0,0,0}}, //
	{{1,1,0,0}, {0,1,0,0}, {0,1,0,0}, {0,0,0,0}}, //
	{{0,0,1,0}, {1,1,1,0}, {0,0,0,0}, {0,0,0,0}}, //
	{{0,1,0,0}, {0,1,0,0}, {1,1,0,0}, {0,0,0,0}}, //
	{{1,0,0,0}, {1,1,1,0}, {0,0,0,0}, {0,0,0,0}}, //
	{{1,1,0,0}, {1,0,0,0}, {1,0,0,0}, {0,0,0,0}}, //
	{{1,1,1,0}, {0,0,1,0}, {0,0,0,0}, {0,0,0,0}}, //
	{{1,0,0,0}, {1,1,0,0}, {0,1,0,0}, {0,0,0,0}}, // ㄹ
	{{0,1,1,0}, {1,1,0,0}, {0,0,0,0}, {0,0,0,0}}, //
	{{0,1,0,0}, {1,1,0,0}, {1,0,0,0}, {0,0,0,0}}, //
	{{1,1,0,0}, {0,1,1,0}, {0,0,0,0}, {0,0,0,0}}, //
	{{1,1,1,0}, {0,1,0,0}, {0,0,0,0}, {0,0,0,0}}, // ㅗ
	{{0,1,0,0}, {1,1,0,0}, {0,1,0,0}, {0,0,0,0}}, //
	{{0,1,0,0}, {1,1,1,0}, {0,0,0,0}, {0,0,0,0}}, //
	{{1,0,0,0}, {1,1,0,0}, {1,0,0,0}, {0,0,0,0}} //
};
int MAP[510][510]; //점수판
int N, M; //점수판의 사이즈(N*M)

int checkBlock(int r, int c) {
	int ret = 0;

	//(r,c)를 시작으로 19가지의 테트로미노 조각을 모두 올려보기
	//모든 테트로미노는 4*4 사이즈
	for (int i = 0; i < 19; i++) {
		int sum = 0; //각 블록마다 sum 점수 초기화
		for (int j = 0; j < 4; j++) {
			int nr = r + j;

			for (int k = 0; k < 4; k++) {
				int nc = c + k;

				//조각이 1인 칸인데 격자를 벗어났다면 이번 턴은 무효
				if (tetris[i][j][k] == 1 && (nr < 0 || nr >= N || nc < 0 || nc >= M)) {
					sum = -1;
					break;
				}

				sum += MAP[nr][nc] * tetris[i][j][k]; //이번 턴에 점수 추가
			}
		}
		
		if (sum > ret) ret = sum; //갱신
	}

	return ret;
}

int main() {
	//input
	cin >> N >> M;

	for (int i = 0; i < N; i++) {
		for (int j = 0; j < M; j++) {
			cin >> MAP[i][j];
		}
	}

	//solve - 각 격자를 시작으로 19가지의 테트로미노 올려보기
	int ans = 0;
	for (int i = 0; i < N; i++) {
		for (int j = 0; j < M; j++) {
			int sum = checkBlock(i, j); //(i,j)를 시작으로 19가지 올려보기
			if (sum > ans) ans = sum; //점수가 ans보다 크다면 갱신
		}
	}
	
	//output
	cout << ans << "\n";
	
	return 0;
}